/*
 * This file is generated by jOOQ.
 */
package com.gpnk.generated.jooq.tables.records;


import com.gpnk.generated.jooq.tables.Locations;

import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocationsRecord extends UpdatableRecordImpl<LocationsRecord> implements Record4<Integer, String, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = -1536017278;

    /**
     * Setter for <code>public.locations.location_id</code>.
     */
    public void setLocationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.locations.location_id</code>.
     */
    public Integer getLocationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.locations.zip_code</code>.
     */
    public void setZipCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.locations.zip_code</code>.
     */
    public String getZipCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.locations.latitude</code>.
     */
    public void setLatitude(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.locations.latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.locations.longitude</code>.
     */
    public void setLongitude(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.locations.longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, BigDecimal, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, BigDecimal, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Locations.LOCATIONS.LOCATION_ID;
    }

    @Override
    public Field<String> field2() {
        return Locations.LOCATIONS.ZIP_CODE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Locations.LOCATIONS.LATITUDE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Locations.LOCATIONS.LONGITUDE;
    }

    @Override
    public Integer component1() {
        return getLocationId();
    }

    @Override
    public String component2() {
        return getZipCode();
    }

    @Override
    public BigDecimal component3() {
        return getLatitude();
    }

    @Override
    public BigDecimal component4() {
        return getLongitude();
    }

    @Override
    public Integer value1() {
        return getLocationId();
    }

    @Override
    public String value2() {
        return getZipCode();
    }

    @Override
    public BigDecimal value3() {
        return getLatitude();
    }

    @Override
    public BigDecimal value4() {
        return getLongitude();
    }

    @Override
    public LocationsRecord value1(Integer value) {
        setLocationId(value);
        return this;
    }

    @Override
    public LocationsRecord value2(String value) {
        setZipCode(value);
        return this;
    }

    @Override
    public LocationsRecord value3(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    @Override
    public LocationsRecord value4(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    @Override
    public LocationsRecord values(Integer value1, String value2, BigDecimal value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationsRecord
     */
    public LocationsRecord() {
        super(Locations.LOCATIONS);
    }

    /**
     * Create a detached, initialised LocationsRecord
     */
    public LocationsRecord(Integer locationId, String zipCode, BigDecimal latitude, BigDecimal longitude) {
        super(Locations.LOCATIONS);

        set(0, locationId);
        set(1, zipCode);
        set(2, latitude);
        set(3, longitude);
    }
}
